{"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport { Tools, AuthTypeEnum, AuthorizationTypeEnum } from './types/assistants';\nexport function sha1(input) {\n    return crypto.createHash('sha1').update(input).digest('hex');\n}\nexport function createURL(domain, path) {\n    var myURL = new URL(path, domain);\n    return myURL.toString();\n}\nvar FunctionSignature = /** @class */ (function () {\n    function FunctionSignature(name, description, parameters) {\n        var _a, _b;\n        this.name = name;\n        this.description = description;\n        if ((_a = parameters.properties) === null || _a === void 0 ? void 0 : _a['requestBody']) {\n            this.parameters = (_b = parameters.properties) === null || _b === void 0 ? void 0 : _b['requestBody'];\n        }\n        else {\n            this.parameters = parameters;\n        }\n    }\n    FunctionSignature.prototype.toObjectTool = function () {\n        return {\n            type: Tools.function,\n            function: {\n                name: this.name,\n                description: this.description,\n                parameters: this.parameters,\n            },\n        };\n    };\n    return FunctionSignature;\n}());\nexport { FunctionSignature };\nvar ActionRequest = /** @class */ (function () {\n    function ActionRequest(domain, path, method, operation, isConsequential, contentType) {\n        this.authHeaders = {};\n        this.domain = domain;\n        this.path = path;\n        this.method = method;\n        this.operation = operation;\n        this.isConsequential = isConsequential;\n        this.contentType = contentType;\n    }\n    ActionRequest.prototype.setParams = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _i, _a, _b, key, value, paramPattern;\n            return __generator(this, function (_c) {\n                this.operationHash = sha1(JSON.stringify(params));\n                this.params = params;\n                for (_i = 0, _a = Object.entries(params); _i < _a.length; _i++) {\n                    _b = _a[_i], key = _b[0], value = _b[1];\n                    paramPattern = \"{\".concat(key, \"}\");\n                    if (this.path.includes(paramPattern)) {\n                        this.path = this.path.replace(paramPattern, encodeURIComponent(value));\n                        delete this.params[key];\n                    }\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    ActionRequest.prototype.setAuth = function (metadata) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, type, \n            /* API Key */\n            authorization_type, custom_auth_header, \n            /* OAuth */\n            authorization_url, client_url, scope, token_exchange_method, \n            /* API Key */\n            api_key, \n            /* OAuth */\n            oauth_client_id, oauth_client_secret, isApiKey, isOAuth, basicToken, tokenResponse;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!metadata.auth) {\n                            return [2 /*return*/];\n                        }\n                        _a = metadata.auth, type = _a.type, authorization_type = _a.authorization_type, custom_auth_header = _a.custom_auth_header, authorization_url = _a.authorization_url, client_url = _a.client_url, scope = _a.scope, token_exchange_method = _a.token_exchange_method;\n                        api_key = metadata.api_key, oauth_client_id = metadata.oauth_client_id, oauth_client_secret = metadata.oauth_client_secret;\n                        isApiKey = api_key && type === AuthTypeEnum.ServiceHttp;\n                        isOAuth = oauth_client_id &&\n                            oauth_client_secret &&\n                            type === AuthTypeEnum.OAuth &&\n                            authorization_url &&\n                            client_url &&\n                            scope &&\n                            token_exchange_method;\n                        if (!(isApiKey && authorization_type === AuthorizationTypeEnum.Basic)) return [3 /*break*/, 1];\n                        basicToken = Buffer.from(api_key).toString('base64');\n                        this.authHeaders['Authorization'] = \"Basic \".concat(basicToken);\n                        return [3 /*break*/, 6];\n                    case 1:\n                        if (!(isApiKey && authorization_type === AuthorizationTypeEnum.Bearer)) return [3 /*break*/, 2];\n                        this.authHeaders['Authorization'] = \"Bearer \".concat(api_key);\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(isApiKey &&\n                            authorization_type === AuthorizationTypeEnum.Custom &&\n                            custom_auth_header)) return [3 /*break*/, 3];\n                        this.authHeaders[custom_auth_header] = api_key;\n                        return [3 /*break*/, 6];\n                    case 3:\n                        if (!isOAuth) return [3 /*break*/, 6];\n                        if (!!this.authToken) return [3 /*break*/, 5];\n                        return [4 /*yield*/, axios.post(client_url, {\n                                client_id: oauth_client_id,\n                                client_secret: oauth_client_secret,\n                                scope: scope,\n                                grant_type: 'client_credentials',\n                            }, {\n                                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                            })];\n                    case 4:\n                        tokenResponse = _b.sent();\n                        this.authToken = tokenResponse.data.access_token;\n                        _b.label = 5;\n                    case 5:\n                        this.authHeaders['Authorization'] = \"Bearer \".concat(this.authToken);\n                        _b.label = 6;\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    ActionRequest.prototype.execute = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var url, headers, method;\n            return __generator(this, function (_a) {\n                url = createURL(this.domain, this.path);\n                headers = __assign(__assign({}, this.authHeaders), { 'Content-Type': this.contentType });\n                method = this.method.toLowerCase();\n                if (method === 'get') {\n                    return [2 /*return*/, axios.get(url, { headers: headers, params: this.params })];\n                }\n                else if (method === 'post') {\n                    return [2 /*return*/, axios.post(url, this.params, { headers: headers })];\n                }\n                else if (method === 'put') {\n                    return [2 /*return*/, axios.put(url, this.params, { headers: headers })];\n                }\n                else if (method === 'delete') {\n                    return [2 /*return*/, axios.delete(url, { headers: headers, data: this.params })];\n                }\n                else if (method === 'patch') {\n                    return [2 /*return*/, axios.patch(url, this.params, { headers: headers })];\n                }\n                else {\n                    throw new Error(\"Unsupported HTTP method: \".concat(this.method));\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    return ActionRequest;\n}());\nexport { ActionRequest };\nexport function resolveRef(schema, components) {\n    var _a;\n    if ('$ref' in schema && components) {\n        var refPath = schema.$ref.replace(/^#\\/components\\/schemas\\//, '');\n        var resolvedSchema = (_a = components.schemas) === null || _a === void 0 ? void 0 : _a[refPath];\n        if (!resolvedSchema) {\n            throw new Error(\"Reference \".concat(schema.$ref, \" not found\"));\n        }\n        return resolveRef(resolvedSchema, components);\n    }\n    return schema;\n}\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport function openapiToFunction(openapiSpec) {\n    var _a, _b, _c, _d;\n    var functionSignatures = [];\n    var requestBuilders = {};\n    // Base URL from OpenAPI spec servers\n    var baseUrl = (_c = (_b = (_a = openapiSpec.servers) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.url) !== null && _c !== void 0 ? _c : '';\n    // Iterate over each path and method in the OpenAPI spec\n    for (var _i = 0, _e = Object.entries(openapiSpec.paths); _i < _e.length; _i++) {\n        var _f = _e[_i], path = _f[0], methods = _f[1];\n        for (var _g = 0, _h = Object.entries(methods); _g < _h.length; _g++) {\n            var _j = _h[_g], method = _j[0], operation = _j[1];\n            var operationObj = operation;\n            // Operation ID is used as the function name\n            var operationId = operationObj.operationId || \"\".concat(method, \"_\").concat(path);\n            var description = operationObj.summary || operationObj.description || '';\n            var parametersSchema = { type: 'object', properties: {}, required: [] };\n            if (operationObj.requestBody) {\n                var requestBody = operationObj.requestBody;\n                var content = requestBody.content;\n                var contentType = Object.keys(content)[0];\n                var schema = (_d = content[contentType]) === null || _d === void 0 ? void 0 : _d.schema;\n                var resolvedSchema = resolveRef(schema, openapiSpec.components);\n                parametersSchema.properties['requestBody'] = resolvedSchema;\n            }\n            if (operationObj.parameters) {\n                for (var _k = 0, _l = operationObj.parameters; _k < _l.length; _k++) {\n                    var param = _l[_k];\n                    var paramObj = param;\n                    var resolvedSchema = resolveRef(__assign({}, paramObj.schema), openapiSpec.components);\n                    parametersSchema.properties[paramObj.name] = resolvedSchema;\n                    if (paramObj.required) {\n                        parametersSchema.required.push(paramObj.name);\n                    }\n                    if (paramObj.description && !('$$ref' in parametersSchema.properties[paramObj.name])) {\n                        parametersSchema.properties[paramObj.name].description = paramObj.description;\n                    }\n                }\n            }\n            var functionSignature = new FunctionSignature(operationId, description, parametersSchema);\n            functionSignatures.push(functionSignature);\n            var actionRequest = new ActionRequest(baseUrl, path, method, operationId, !!operationObj['x-openai-isConsequential'], // Custom extension for consequential actions\n            operationObj.requestBody ? 'application/json' : 'application/x-www-form-urlencoded');\n            requestBuilders[operationId] = actionRequest;\n        }\n    }\n    return { functionSignatures: functionSignatures, requestBuilders: requestBuilders };\n}\nexport function validateAndParseOpenAPISpec(specString) {\n    var _a;\n    try {\n        var parsedSpec = void 0;\n        try {\n            parsedSpec = JSON.parse(specString);\n        }\n        catch (_b) {\n            parsedSpec = load(specString);\n        }\n        // Check for servers\n        if (!parsedSpec.servers ||\n            !Array.isArray(parsedSpec.servers) ||\n            parsedSpec.servers.length === 0) {\n            return { status: false, message: 'Could not find a valid URL in `servers`' };\n        }\n        if (!parsedSpec.servers[0].url) {\n            return { status: false, message: 'Could not find a valid URL in `servers`' };\n        }\n        // Check for paths\n        var paths = parsedSpec.paths;\n        if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n            return { status: false, message: 'No paths found in the OpenAPI spec.' };\n        }\n        var components = ((_a = parsedSpec.components) === null || _a === void 0 ? void 0 : _a.schemas) || {};\n        var messages = [];\n        for (var _i = 0, _c = Object.entries(paths); _i < _c.length; _i++) {\n            var _d = _c[_i], path = _d[0], methods = _d[1];\n            for (var _e = 0, _f = Object.entries(methods); _e < _f.length; _e++) {\n                var _g = _f[_e], httpMethod = _g[0], operation = _g[1];\n                // Ensure operation is a valid operation object\n                var responses = operation.responses;\n                if (typeof operation === 'object' && responses) {\n                    for (var _h = 0, _j = Object.entries(responses); _h < _j.length; _h++) {\n                        var _k = _j[_h], statusCode = _k[0], response = _k[1];\n                        var content = response.content;\n                        if (content && content['application/json'] && content['application/json'].schema) {\n                            var schema = content['application/json'].schema;\n                            if ('$ref' in schema && typeof schema.$ref === 'string') {\n                                var refName = schema.$ref.split('/').pop();\n                                if (refName && !components[refName]) {\n                                    messages.push(\"In context=('paths', '\".concat(path, \"', '\").concat(httpMethod, \"', '\").concat(statusCode, \"', 'response', 'content', 'application/json', 'schema'), reference to unknown component \").concat(refName, \"; using empty schema\"));\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return {\n            status: true,\n            message: messages.join('\\n') || 'OpenAPI spec is valid.',\n            spec: parsedSpec,\n        };\n    }\n    catch (error) {\n        return { status: false, message: 'Error parsing OpenAPI spec.' };\n    }\n}\n//# sourceMappingURL=actions.js.map","references":["/home/lau/dev-projects/Chocolatine/node_modules/axios/index.d.ts","/home/lau/dev-projects/Chocolatine/node_modules/url/url.js","/home/lau/dev-projects/Chocolatine/node_modules/@types/js-yaml/index.d.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/types/assistants.ts","/home/lau/dev-projects/Chocolatine/node_modules/openapi-types/dist/index.d.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/types/assistants.ts"],"map":"{\"version\":3,\"file\":\"actions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/actions.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/lau/dev-projects/Chocolatine/packages/data-provider/dist/types/actions.d.ts","writeByteOrderMark":false,"text":"import type { FunctionTool, Schema, Reference, ActionMetadata } from './types/assistants';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { AuthorizationTypeEnum } from './types/assistants';\nexport type ParametersSchema = {\n    type: string;\n    properties: Record<string, Reference | Schema>;\n    required: string[];\n};\nexport type ApiKeyCredentials = {\n    api_key: string;\n    custom_auth_header?: string;\n    authorization_type?: AuthorizationTypeEnum;\n};\nexport type OAuthCredentials = {\n    tokenUrl: string;\n    clientId: string;\n    clientSecret: string;\n    scope: string;\n};\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\nexport declare function sha1(input: string): string;\nexport declare function createURL(domain: string, path: string): string;\nexport declare class FunctionSignature {\n    name: string;\n    description: string;\n    parameters: ParametersSchema;\n    constructor(name: string, description: string, parameters: ParametersSchema);\n    toObjectTool(): FunctionTool;\n}\nexport declare class ActionRequest {\n    domain: string;\n    path: string;\n    method: string;\n    operation: string;\n    operationHash?: string;\n    isConsequential: boolean;\n    contentType: string;\n    params?: object;\n    constructor(domain: string, path: string, method: string, operation: string, isConsequential: boolean, contentType: string);\n    private authHeaders;\n    private authToken?;\n    setParams(params: object): Promise<void>;\n    setAuth(metadata: ActionMetadata): Promise<void>;\n    execute(): Promise<import(\"axios\").AxiosResponse<any, any>>;\n}\nexport declare function resolveRef(schema: OpenAPIV3.SchemaObject | OpenAPIV3.ReferenceObject | OpenAPIV3.RequestBodyObject, components?: OpenAPIV3.ComponentsObject): OpenAPIV3.SchemaObject;\n/** Function to convert OpenAPI spec to function signatures and request builders */\nexport declare function openapiToFunction(openapiSpec: OpenAPIV3.Document): {\n    functionSignatures: FunctionSignature[];\n    requestBuilders: Record<string, ActionRequest>;\n};\nexport type ValidationResult = {\n    status: boolean;\n    message: string;\n    spec?: OpenAPIV3.Document;\n};\nexport declare function validateAndParseOpenAPISpec(specString: string): ValidationResult;\n"}}
