{"code":"export var Tools;\n(function (Tools) {\n    Tools[\"code_interpreter\"] = \"code_interpreter\";\n    Tools[\"retrieval\"] = \"retrieval\";\n    Tools[\"function\"] = \"function\";\n})(Tools || (Tools = {}));\nexport var ContentTypes;\n(function (ContentTypes) {\n    ContentTypes[\"TEXT\"] = \"text\";\n    ContentTypes[\"TOOL_CALL\"] = \"tool_call\";\n    ContentTypes[\"IMAGE_FILE\"] = \"image_file\";\n    ContentTypes[\"ERROR\"] = \"error\";\n})(ContentTypes || (ContentTypes = {}));\nexport var StepTypes;\n(function (StepTypes) {\n    StepTypes[\"TOOL_CALLS\"] = \"tool_calls\";\n    StepTypes[\"MESSAGE_CREATION\"] = \"message_creation\";\n})(StepTypes || (StepTypes = {}));\nexport var ToolCallTypes;\n(function (ToolCallTypes) {\n    ToolCallTypes[\"FUNCTION\"] = \"function\";\n    ToolCallTypes[\"RETRIEVAL\"] = \"retrieval\";\n    ToolCallTypes[\"CODE_INTERPRETER\"] = \"code_interpreter\";\n})(ToolCallTypes || (ToolCallTypes = {}));\nexport var StepStatus;\n(function (StepStatus) {\n    StepStatus[\"IN_PROGRESS\"] = \"in_progress\";\n    StepStatus[\"CANCELLED\"] = \"cancelled\";\n    StepStatus[\"FAILED\"] = \"failed\";\n    StepStatus[\"COMPLETED\"] = \"completed\";\n    StepStatus[\"EXPIRED\"] = \"expired\";\n})(StepStatus || (StepStatus = {}));\nexport var MessageContentTypes;\n(function (MessageContentTypes) {\n    MessageContentTypes[\"TEXT\"] = \"text\";\n    MessageContentTypes[\"IMAGE_FILE\"] = \"image_file\";\n})(MessageContentTypes || (MessageContentTypes = {}));\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport var RunStatus;\n(function (RunStatus) {\n    RunStatus[\"QUEUED\"] = \"queued\";\n    RunStatus[\"IN_PROGRESS\"] = \"in_progress\";\n    RunStatus[\"REQUIRES_ACTION\"] = \"requires_action\";\n    RunStatus[\"CANCELLING\"] = \"cancelling\";\n    RunStatus[\"CANCELLED\"] = \"cancelled\";\n    RunStatus[\"FAILED\"] = \"failed\";\n    RunStatus[\"COMPLETED\"] = \"completed\";\n    RunStatus[\"EXPIRED\"] = \"expired\";\n})(RunStatus || (RunStatus = {}));\nexport var actionDelimiter = '_action_';\nexport var actionDomainSeparator = '---';\nexport var AuthTypeEnum;\n(function (AuthTypeEnum) {\n    AuthTypeEnum[\"ServiceHttp\"] = \"service_http\";\n    AuthTypeEnum[\"OAuth\"] = \"oauth\";\n    AuthTypeEnum[\"None\"] = \"none\";\n})(AuthTypeEnum || (AuthTypeEnum = {}));\nexport var AuthorizationTypeEnum;\n(function (AuthorizationTypeEnum) {\n    AuthorizationTypeEnum[\"Bearer\"] = \"bearer\";\n    AuthorizationTypeEnum[\"Basic\"] = \"basic\";\n    AuthorizationTypeEnum[\"Custom\"] = \"custom\";\n})(AuthorizationTypeEnum || (AuthorizationTypeEnum = {}));\nexport var TokenExchangeMethodEnum;\n(function (TokenExchangeMethodEnum) {\n    TokenExchangeMethodEnum[\"DefaultPost\"] = \"default_post\";\n    TokenExchangeMethodEnum[\"BasicAuthHeader\"] = \"basic_auth_header\";\n})(TokenExchangeMethodEnum || (TokenExchangeMethodEnum = {}));\nexport var FilePurpose;\n(function (FilePurpose) {\n    FilePurpose[\"FineTune\"] = \"fine-tune\";\n    FilePurpose[\"FineTuneResults\"] = \"fine-tune-results\";\n    FilePurpose[\"Assistants\"] = \"assistants\";\n    FilePurpose[\"AssistantsOutput\"] = \"assistants_output\";\n})(FilePurpose || (FilePurpose = {}));\nexport var defaultOrderQuery = {\n    order: 'desc',\n    limit: 100,\n};\nexport var AssistantStreamEvents;\n(function (AssistantStreamEvents) {\n    AssistantStreamEvents[\"ThreadCreated\"] = \"thread.created\";\n    AssistantStreamEvents[\"ThreadRunCreated\"] = \"thread.run.created\";\n    AssistantStreamEvents[\"ThreadRunQueued\"] = \"thread.run.queued\";\n    AssistantStreamEvents[\"ThreadRunInProgress\"] = \"thread.run.in_progress\";\n    AssistantStreamEvents[\"ThreadRunRequiresAction\"] = \"thread.run.requires_action\";\n    AssistantStreamEvents[\"ThreadRunCompleted\"] = \"thread.run.completed\";\n    AssistantStreamEvents[\"ThreadRunFailed\"] = \"thread.run.failed\";\n    AssistantStreamEvents[\"ThreadRunCancelling\"] = \"thread.run.cancelling\";\n    AssistantStreamEvents[\"ThreadRunCancelled\"] = \"thread.run.cancelled\";\n    AssistantStreamEvents[\"ThreadRunExpired\"] = \"thread.run.expired\";\n    AssistantStreamEvents[\"ThreadRunStepCreated\"] = \"thread.run.step.created\";\n    AssistantStreamEvents[\"ThreadRunStepInProgress\"] = \"thread.run.step.in_progress\";\n    AssistantStreamEvents[\"ThreadRunStepCompleted\"] = \"thread.run.step.completed\";\n    AssistantStreamEvents[\"ThreadRunStepFailed\"] = \"thread.run.step.failed\";\n    AssistantStreamEvents[\"ThreadRunStepCancelled\"] = \"thread.run.step.cancelled\";\n    AssistantStreamEvents[\"ThreadRunStepExpired\"] = \"thread.run.step.expired\";\n    AssistantStreamEvents[\"ThreadRunStepDelta\"] = \"thread.run.step.delta\";\n    AssistantStreamEvents[\"ThreadMessageCreated\"] = \"thread.message.created\";\n    AssistantStreamEvents[\"ThreadMessageInProgress\"] = \"thread.message.in_progress\";\n    AssistantStreamEvents[\"ThreadMessageCompleted\"] = \"thread.message.completed\";\n    AssistantStreamEvents[\"ThreadMessageIncomplete\"] = \"thread.message.incomplete\";\n    AssistantStreamEvents[\"ThreadMessageDelta\"] = \"thread.message.delta\";\n    AssistantStreamEvents[\"ErrorEvent\"] = \"error\";\n})(AssistantStreamEvents || (AssistantStreamEvents = {}));\n//# sourceMappingURL=assistants.js.map","references":["/home/lau/dev-projects/Chocolatine/node_modules/openapi-types/dist/index.d.ts"],"map":"{\"version\":3,\"file\":\"assistants.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/types/assistants.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/lau/dev-projects/Chocolatine/packages/data-provider/dist/types/types/assistants.d.ts","writeByteOrderMark":false,"text":"import type { OpenAPIV3 } from 'openapi-types';\nexport type Schema = OpenAPIV3.SchemaObject & {\n    description?: string;\n};\nexport type Reference = OpenAPIV3.ReferenceObject & {\n    description?: string;\n};\nexport type Metadata = {\n    [key: string]: unknown;\n};\nexport declare enum Tools {\n    code_interpreter = \"code_interpreter\",\n    retrieval = \"retrieval\",\n    function = \"function\"\n}\nexport type Tool = {\n    [type: string]: Tools;\n};\nexport type FunctionTool = {\n    type: Tools;\n    function?: {\n        description: string;\n        name: string;\n        parameters: Record<string, unknown>;\n    };\n};\nexport type Assistant = {\n    id: string;\n    created_at: number;\n    description: string | null;\n    file_ids: string[];\n    instructions: string | null;\n    metadata: Metadata | null;\n    model: string;\n    name: string | null;\n    object: string;\n    tools: FunctionTool[];\n};\nexport type AssistantCreateParams = {\n    model: string;\n    description?: string | null;\n    file_ids?: string[];\n    instructions?: string | null;\n    metadata?: Metadata | null;\n    name?: string | null;\n    tools?: Array<FunctionTool | string>;\n};\nexport type AssistantUpdateParams = {\n    model?: string;\n    description?: string | null;\n    file_ids?: string[];\n    instructions?: string | null;\n    metadata?: Metadata | null;\n    name?: string | null;\n    tools?: Array<FunctionTool | string>;\n};\nexport type AssistantListParams = {\n    limit?: number;\n    before?: string | null;\n    after?: string | null;\n    order?: 'asc' | 'desc';\n};\nexport type AssistantListResponse = {\n    object: string;\n    data: Assistant[];\n    first_id: string;\n    last_id: string;\n    has_more: boolean;\n};\nexport type File = {\n    file_id: string;\n    id?: string;\n    temp_file_id?: string;\n    bytes: number;\n    created_at: number;\n    filename: string;\n    object: string;\n    purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n    id: string;\n    code_interpreter: {\n        input: string;\n        outputs: Array<Record<string, unknown>>;\n    };\n    type: 'code_interpreter';\n};\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n    id: string;\n    function: {\n        arguments: string;\n        name: string;\n        output: string | null;\n    };\n    type: 'function';\n};\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n    id: string;\n    retrieval: unknown;\n    type: 'retrieval';\n};\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n    tool_calls: Array<CodeToolCall | RetrievalToolCall | FunctionToolCall>;\n    type: 'tool_calls';\n};\nexport type ImageFile = {\n    /**\n     * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n     * in the message content.\n     */\n    file_id: string;\n    filename: string;\n    filepath: string;\n    height: number;\n    width: number;\n    /**\n     * Prompt used to generate the image if applicable.\n     */\n    prompt?: string;\n    /**\n     * Additional metadata used to generate or about the image/tool_call.\n     */\n    metadata?: Record<string, unknown>;\n};\nexport type FileCitation = {\n    end_index: number;\n    file_citation: FileCitationDetails;\n    start_index: number;\n    text: string;\n    type: 'file_citation';\n};\nexport type FileCitationDetails = {\n    file_id: string;\n    quote: string;\n};\nexport type FilePath = {\n    end_index: number;\n    file_path: FilePathDetails;\n    start_index: number;\n    text: string;\n    type: 'file_path';\n};\nexport type FilePathDetails = {\n    file_id: string;\n};\nexport type Text = {\n    annotations?: Array<FileCitation | FilePath>;\n    value: string;\n};\nexport declare enum ContentTypes {\n    TEXT = \"text\",\n    TOOL_CALL = \"tool_call\",\n    IMAGE_FILE = \"image_file\",\n    ERROR = \"error\"\n}\nexport declare enum StepTypes {\n    TOOL_CALLS = \"tool_calls\",\n    MESSAGE_CREATION = \"message_creation\"\n}\nexport declare enum ToolCallTypes {\n    FUNCTION = \"function\",\n    RETRIEVAL = \"retrieval\",\n    CODE_INTERPRETER = \"code_interpreter\"\n}\nexport declare enum StepStatus {\n    IN_PROGRESS = \"in_progress\",\n    CANCELLED = \"cancelled\",\n    FAILED = \"failed\",\n    COMPLETED = \"completed\",\n    EXPIRED = \"expired\"\n}\nexport declare enum MessageContentTypes {\n    TEXT = \"text\",\n    IMAGE_FILE = \"image_file\"\n}\nexport declare enum RunStatus {\n    QUEUED = \"queued\",\n    IN_PROGRESS = \"in_progress\",\n    REQUIRES_ACTION = \"requires_action\",\n    CANCELLING = \"cancelling\",\n    CANCELLED = \"cancelled\",\n    FAILED = \"failed\",\n    COMPLETED = \"completed\",\n    EXPIRED = \"expired\"\n}\nexport type PartMetadata = {\n    progress?: number;\n    asset_pointer?: string;\n    status?: string;\n    action?: boolean;\n};\nexport type ContentPart = (CodeToolCall | RetrievalToolCall | FunctionToolCall | ImageFile | Text) & PartMetadata;\nexport type TMessageContentParts = {\n    type: ContentTypes.ERROR;\n    text: Text & PartMetadata;\n} | {\n    type: ContentTypes.TEXT;\n    text: Text & PartMetadata;\n} | {\n    type: ContentTypes.TOOL_CALL;\n    tool_call: (CodeToolCall | RetrievalToolCall | FunctionToolCall) & PartMetadata;\n} | {\n    type: ContentTypes.IMAGE_FILE;\n    image_file: ImageFile & PartMetadata;\n};\nexport type StreamContentData = TMessageContentParts & {\n    index: number;\n};\nexport type TContentData = StreamContentData & {\n    messageId: string;\n    conversationId: string;\n    userMessageId: string;\n    thread_id: string;\n    stream?: boolean;\n};\nexport declare const actionDelimiter = \"_action_\";\nexport declare const actionDomainSeparator = \"---\";\nexport declare enum AuthTypeEnum {\n    ServiceHttp = \"service_http\",\n    OAuth = \"oauth\",\n    None = \"none\"\n}\nexport declare enum AuthorizationTypeEnum {\n    Bearer = \"bearer\",\n    Basic = \"basic\",\n    Custom = \"custom\"\n}\nexport declare enum TokenExchangeMethodEnum {\n    DefaultPost = \"default_post\",\n    BasicAuthHeader = \"basic_auth_header\"\n}\nexport type ActionAuth = {\n    authorization_type?: AuthorizationTypeEnum;\n    custom_auth_header?: string;\n    type?: AuthTypeEnum;\n    authorization_content_type?: string;\n    authorization_url?: string;\n    client_url?: string;\n    scope?: string;\n    token_exchange_method?: TokenExchangeMethodEnum;\n};\nexport type ActionMetadata = {\n    api_key?: string;\n    auth?: ActionAuth;\n    domain?: string;\n    privacy_policy_url?: string;\n    raw_spec?: string;\n    oauth_client_id?: string;\n    oauth_client_secret?: string;\n};\nexport type Action = {\n    action_id: string;\n    assistant_id: string;\n    type?: string;\n    settings?: Record<string, unknown>;\n    metadata: ActionMetadata;\n};\nexport type AssistantAvatar = {\n    filepath: string;\n    source: string;\n};\nexport type AssistantDocument = {\n    user: string;\n    assistant_id: string;\n    avatar?: AssistantAvatar;\n    access_level?: number;\n    file_ids?: string[];\n    actions?: string[];\n    createdAt?: Date;\n    updatedAt?: Date;\n};\nexport declare enum FilePurpose {\n    FineTune = \"fine-tune\",\n    FineTuneResults = \"fine-tune-results\",\n    Assistants = \"assistants\",\n    AssistantsOutput = \"assistants_output\"\n}\nexport declare const defaultOrderQuery: {\n    order: 'desc';\n    limit: 100;\n};\nexport declare enum AssistantStreamEvents {\n    ThreadCreated = \"thread.created\",\n    ThreadRunCreated = \"thread.run.created\",\n    ThreadRunQueued = \"thread.run.queued\",\n    ThreadRunInProgress = \"thread.run.in_progress\",\n    ThreadRunRequiresAction = \"thread.run.requires_action\",\n    ThreadRunCompleted = \"thread.run.completed\",\n    ThreadRunFailed = \"thread.run.failed\",\n    ThreadRunCancelling = \"thread.run.cancelling\",\n    ThreadRunCancelled = \"thread.run.cancelled\",\n    ThreadRunExpired = \"thread.run.expired\",\n    ThreadRunStepCreated = \"thread.run.step.created\",\n    ThreadRunStepInProgress = \"thread.run.step.in_progress\",\n    ThreadRunStepCompleted = \"thread.run.step.completed\",\n    ThreadRunStepFailed = \"thread.run.step.failed\",\n    ThreadRunStepCancelled = \"thread.run.step.cancelled\",\n    ThreadRunStepExpired = \"thread.run.step.expired\",\n    ThreadRunStepDelta = \"thread.run.step.delta\",\n    ThreadMessageCreated = \"thread.message.created\",\n    ThreadMessageInProgress = \"thread.message.in_progress\",\n    ThreadMessageCompleted = \"thread.message.completed\",\n    ThreadMessageIncomplete = \"thread.message.incomplete\",\n    ThreadMessageDelta = \"thread.message.delta\",\n    ErrorEvent = \"error\"\n}\n"}}
