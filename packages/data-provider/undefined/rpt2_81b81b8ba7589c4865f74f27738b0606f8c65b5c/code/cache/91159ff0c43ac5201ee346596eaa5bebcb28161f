{"code":"import { __assign } from \"tslib\";\nimport { useQuery, useMutation, useQueryClient, } from '@tanstack/react-query';\nimport { defaultOrderQuery } from '../types/assistants';\nimport { initialModelsConfig, LocalStorageKeys } from '../config';\nimport * as dataService from '../data-service';\nimport { QueryKeys } from '../keys';\nimport request from '../request';\nimport * as s from '../schemas';\nexport var useAbortRequestWithMessage = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (_a) {\n        var endpoint = _a.endpoint, abortKey = _a.abortKey, message = _a.message;\n        return dataService.abortRequestWithMessage(endpoint, abortKey, message);\n    }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.balance]);\n        },\n    });\n};\nexport var useGetUserRole = function (config) {\n    return useQuery([QueryKeys.userRole], function () { return dataService.getRole(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var usePostUserComments = function (comment, config) {\n    return useMutation(function () { return dataService.postUserComments(comment); }, config);\n};\nexport var useGetUsersComments = function (config) {\n    return useQuery([QueryKeys.getuserscomments], function () { return dataService.getUsersComments(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var usePostFeedback = function (feedback, config) {\n    return useMutation(function () { return dataService.postFeedback(feedback); }, config);\n};\nexport var useGetFeedbacks = function (config) {\n    return useQuery([QueryKeys.getfeedbacks], function () { return dataService.getFeedbacks(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var useGetFeedbackByPreset = function (preset, config) {\n    return useQuery([QueryKeys.getfeedbackByPreset, preset], function () { return dataService.getFeedbackByPreset(preset); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var useGetFeedbackByPresetAndPositivity = function (preset, feedback, config) {\n    return useQuery([QueryKeys.getfeedbackByPresetAndPositivity, preset, feedback], function () { return dataService.getFeedbackByPresetAndPositivity(preset, feedback); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var useGetTokenUsage = function (config) {\n    return useQuery([QueryKeys.tokenUsage], function () { return dataService.getTokenUsage(); }, __assign({ refetchOnWindowFocus: true, refetchOnReconnect: true, refetchOnMount: true }, config));\n};\nexport var useGetAllSkills = function (config) {\n    return useQuery([QueryKeys.teacherSkills], function () { return dataService.getAllSkills(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetSkillsBySubject = function (subject, config) {\n    return useQuery([QueryKeys.teacherSkills, subject], function () { return dataService.getSkillsBySubject(subject); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetSkillsBySkill = function (skill, config) {\n    return useQuery([QueryKeys.teacherSkills, skill], function () { return dataService.getSkillsBySkill(skill); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetSkillsBySubjectAndSkill = function (subject, skill, config) {\n    return useQuery([QueryKeys.teacherSkills, subject, skill], function () { return dataService.getSkillsBySubjectAndSkill(subject, skill); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useCreateSkill = function (newSkill, queryClient, config) {\n    return useMutation(function () { return dataService.createSkill(newSkill); }, __assign(__assign({}, config), { onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.teacherSkills]);\n        } }));\n};\nexport var useIncrementSkill = function (skill, queryClient, config) {\n    return useMutation(function () { return dataService.incrementSkill(skill); }, __assign(__assign({}, config), { onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.teacherSkills]);\n        } }));\n};\nexport var useResetSkill = function (skill, queryClient, config) {\n    return useMutation(function () { return dataService.resetSkill(skill); }, __assign(__assign({}, config), { onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.teacherSkills]);\n        } }));\n};\nexport var useDeleteSkill = function (skill, queryClient, config) {\n    return useMutation(function () { return dataService.deleteSkill(skill); }, __assign(__assign({}, config), { onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.teacherSkills]);\n        } }));\n};\nexport var useGetUserQuery = function (config) {\n    return useQuery([QueryKeys.user], function () { return dataService.getUser(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var useGetMessagesByConvoId = function (id, config) {\n    return useQuery([QueryKeys.messages, id], function () { return dataService.getMessagesByConvoId(id); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetUserBalance = function (config) {\n    return useQuery([QueryKeys.balance], function () { return dataService.getUserBalance(); }, __assign({ refetchOnWindowFocus: true, refetchOnReconnect: true, refetchOnMount: true }, config));\n};\nexport var useGetConversationByIdQuery = function (id, config) {\n    return useQuery([QueryKeys.conversation, id], function () { return dataService.getConversationById(id); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\n//This isn't ideal because its just a query and we're using mutation, but it was the only way\n//to make it work with how the Chat component is structured\nexport var useGetConversationByIdMutation = function (id) {\n    var queryClient = useQueryClient();\n    return useMutation(function () { return dataService.getConversationById(id); }, {\n        // onSuccess: (res: s.TConversation) => {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.conversation, id]);\n        },\n    });\n};\nexport var useUpdateMessageMutation = function (id) {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.updateMessage(payload); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.messages, id]);\n        },\n    });\n};\nexport var useUpdateUserKeysMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.updateUserKey(payload); }, {\n        onSuccess: function (data, variables) {\n            queryClient.invalidateQueries([QueryKeys.name, variables.name]);\n        },\n    });\n};\nexport var useClearConversationsMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function () { return dataService.clearAllConversations(); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.allConversations]);\n        },\n    });\n};\nexport var useRevokeUserKeyMutation = function (name) {\n    var queryClient = useQueryClient();\n    return useMutation(function () { return dataService.revokeUserKey(name); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.name, name]);\n            if (name === s.EModelEndpoint.assistants) {\n                queryClient.invalidateQueries([QueryKeys.assistants, defaultOrderQuery]);\n                queryClient.invalidateQueries([QueryKeys.assistantDocs]);\n                queryClient.invalidateQueries([QueryKeys.assistants]);\n                queryClient.invalidateQueries([QueryKeys.assistant]);\n                queryClient.invalidateQueries([QueryKeys.actions]);\n                queryClient.invalidateQueries([QueryKeys.tools]);\n            }\n        },\n    });\n};\nexport var useRevokeAllUserKeysMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function () { return dataService.revokeAllUserKeys(); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.name]);\n            queryClient.invalidateQueries([QueryKeys.assistants, defaultOrderQuery]);\n            queryClient.invalidateQueries([QueryKeys.assistantDocs]);\n            queryClient.invalidateQueries([QueryKeys.assistants]);\n            queryClient.invalidateQueries([QueryKeys.assistant]);\n            queryClient.invalidateQueries([QueryKeys.actions]);\n            queryClient.invalidateQueries([QueryKeys.tools]);\n        },\n    });\n};\nexport var useGetConversationsQuery = function (pageNumber, config) {\n    return useQuery([QueryKeys.allConversations], function () { return dataService.getConversations(pageNumber); }, __assign({ refetchOnReconnect: false, refetchOnMount: false, retry: 1 }, config));\n};\nexport var useGetSearchEnabledQuery = function (config) {\n    return useQuery([QueryKeys.searchEnabled], function () { return dataService.getSearchEnabled(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetEndpointsQuery = function (config) {\n    return useQuery([QueryKeys.endpoints], function () { return dataService.getAIEndpoints(); }, __assign({ staleTime: Infinity, refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useGetModelsQuery = function (config) {\n    return useQuery([QueryKeys.models], function () { return dataService.getModels(); }, __assign({ initialData: initialModelsConfig, refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, staleTime: Infinity }, config));\n};\nexport var useCreatePresetMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.createPreset(payload); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.presets]);\n        },\n    });\n};\nexport var useDeletePresetMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.deletePreset(payload); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.presets]);\n        },\n    });\n};\nexport var useSearchQuery = function (searchQuery, pageNumber, config) {\n    return useQuery([QueryKeys.searchResults, pageNumber, searchQuery], function () { return dataService.searchConversations(searchQuery, pageNumber); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useUpdateTokenCountMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (_a) {\n        var text = _a.text;\n        return dataService.updateTokenCount(text);\n    }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.tokenCount]);\n        },\n    });\n};\nexport var useLoginUserMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.login(payload); }, {\n        onMutate: function () {\n            queryClient.removeQueries();\n            localStorage.removeItem(LocalStorageKeys.LAST_CONVO_SETUP);\n            localStorage.removeItem(LocalStorageKeys.LAST_MODEL);\n            localStorage.removeItem(LocalStorageKeys.LAST_TOOLS);\n            localStorage.removeItem(LocalStorageKeys.FILES_TO_DELETE);\n            // localStorage.removeItem('lastAssistant');\n        },\n    });\n};\nexport var useRegisterUserMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.register(payload); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.user]);\n        },\n    });\n};\nexport var useRefreshTokenMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function () { return request.refreshToken(); }, {\n        onMutate: function () {\n            queryClient.removeQueries();\n        },\n    });\n};\nexport var useUserKeyQuery = function (name, config) {\n    return useQuery([QueryKeys.name, name], function () {\n        if (!name) {\n            return Promise.resolve({ expiresAt: '' });\n        }\n        return dataService.userKeyQuery(name);\n    }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false, retry: false }, config));\n};\nexport var useRequestPasswordResetMutation = function () {\n    return useMutation(function (payload) {\n        return dataService.requestPasswordReset(payload);\n    });\n};\nexport var useResetPasswordMutation = function () {\n    return useMutation(function (payload) { return dataService.resetPassword(payload); });\n};\nexport var useAvailablePluginsQuery = function (config) {\n    return useQuery([QueryKeys.availablePlugins], function () { return dataService.getAvailablePlugins(); }, __assign({ refetchOnWindowFocus: false, refetchOnReconnect: false, refetchOnMount: false }, config));\n};\nexport var useUpdateUserPluginsMutation = function () {\n    var queryClient = useQueryClient();\n    return useMutation(function (payload) { return dataService.updateUserPlugins(payload); }, {\n        onSuccess: function () {\n            queryClient.invalidateQueries([QueryKeys.user]);\n        },\n    });\n};\nexport var useGetStartupConfig = function () {\n    return useQuery([QueryKeys.startupConfig], function () { return dataService.getStartupConfig(); }, {\n        refetchOnWindowFocus: false,\n        refetchOnReconnect: false,\n        refetchOnMount: false,\n    });\n};\n//# sourceMappingURL=react-query-service.js.map","references":["/home/lau/dev-projects/Chocolatine/node_modules/@tanstack/react-query/build/lib/index.d.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/types/assistants.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/config.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/data-service.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/types/mutations.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/keys.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/request.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/schemas.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/types.ts"],"map":"{\"version\":3,\"file\":\"react-query-service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/react-query/react-query-service.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/lau/dev-projects/Chocolatine/packages/data-provider/dist/types/react-query/react-query-service.d.ts","writeByteOrderMark":false,"text":"import { UseQueryOptions, UseMutationOptions, UseMutationResult, QueryObserverResult, QueryClient } from '@tanstack/react-query';\nimport * as m from '../types/mutations';\nimport * as s from '../schemas';\nimport * as t from '../types';\nexport declare const useAbortRequestWithMessage: () => UseMutationResult<void, Error, {\n    endpoint: string;\n    abortKey: string;\n    message: string;\n}>;\nexport declare const useGetUserRole: (config?: UseQueryOptions<t.TRole>) => QueryObserverResult<t.TRole>;\nexport declare const usePostUserComments: (comment: t.TUserComments, config?: UseMutationOptions<t.TUserComments, unknown, t.TUserComments>) => UseMutationResult<t.TUserComments, unknown, t.TUserComments>;\nexport declare const useGetUsersComments: (config?: UseQueryOptions<t.TUserComments[]>) => QueryObserverResult<t.TUserComments[]>;\nexport declare const usePostFeedback: (feedback: t.TFeedBack, config?: UseMutationOptions<t.TFeedBack, unknown, t.TFeedBack>) => UseMutationResult<t.TFeedBack, unknown, t.TFeedBack>;\nexport declare const useGetFeedbacks: (config?: UseQueryOptions<t.TFeedBack[]>) => QueryObserverResult<t.TFeedBack[]>;\nexport declare const useGetFeedbackByPreset: (preset: string, config?: UseQueryOptions<t.TFeedBack[]>) => QueryObserverResult<t.TFeedBack[]>;\nexport declare const useGetFeedbackByPresetAndPositivity: (preset: string, feedback: boolean, config?: UseQueryOptions<t.TFeedBack[]>) => QueryObserverResult<t.TFeedBack[]>;\nexport declare const useGetTokenUsage: (config?: UseQueryOptions<t.TGetTokenUsage[]>) => QueryObserverResult<t.TGetTokenUsage[]>;\nexport declare const useGetAllSkills: (config?: UseQueryOptions<t.TSkill[]>) => QueryObserverResult<t.TSkill[]>;\nexport declare const useGetSkillsBySubject: (subject: string, config?: UseQueryOptions<t.TSkill[]>) => QueryObserverResult<t.TSkill[]>;\nexport declare const useGetSkillsBySkill: (skill: string, config?: UseQueryOptions<t.TSkill[]>) => QueryObserverResult<t.TSkill[]>;\nexport declare const useGetSkillsBySubjectAndSkill: (subject: string, skill: string, config?: UseQueryOptions<t.TSkill[]>) => QueryObserverResult<t.TSkill[]>;\nexport declare const useCreateSkill: (newSkill: t.TSkill, queryClient: QueryClient, config?: UseMutationOptions<t.TSkill, unknown, t.TSkill>) => UseMutationResult<t.TSkill, unknown, t.TSkill>;\nexport declare const useIncrementSkill: (skill: t.TSkill, queryClient: QueryClient, config?: UseMutationOptions<t.TSkill, unknown, t.TSkill>) => UseMutationResult<t.TSkill, unknown, t.TSkill>;\nexport declare const useResetSkill: (skill: t.TSkill, queryClient: QueryClient, config?: UseMutationOptions<t.TSkill, unknown, t.TSkill>) => UseMutationResult<t.TSkill, unknown, t.TSkill>;\nexport declare const useDeleteSkill: (skill: t.TSkill, queryClient: QueryClient, config?: UseMutationOptions<t.TSkill, unknown, t.TSkill>) => UseMutationResult<t.TSkill, unknown, t.TSkill>;\nexport declare const useGetUserQuery: (config?: UseQueryOptions<t.TUser>) => QueryObserverResult<t.TUser>;\nexport declare const useGetMessagesByConvoId: <TData = s.TMessage[]>(id: string, config?: UseQueryOptions<s.TMessage[], unknown, TData, import(\"@tanstack/react-query\").QueryKey> | undefined) => QueryObserverResult<TData>;\nexport declare const useGetUserBalance: (config?: UseQueryOptions<string>) => QueryObserverResult<string>;\nexport declare const useGetConversationByIdQuery: (id: string, config?: UseQueryOptions<s.TConversation>) => QueryObserverResult<s.TConversation>;\nexport declare const useGetConversationByIdMutation: (id: string) => UseMutationResult<s.TConversation>;\nexport declare const useUpdateMessageMutation: (id: string) => UseMutationResult<unknown, unknown, t.TUpdateMessageRequest, unknown>;\nexport declare const useUpdateUserKeysMutation: () => UseMutationResult<t.TUser, unknown, t.TUpdateUserKeyRequest, unknown>;\nexport declare const useClearConversationsMutation: () => UseMutationResult<unknown>;\nexport declare const useRevokeUserKeyMutation: (name: string) => UseMutationResult<unknown>;\nexport declare const useRevokeAllUserKeysMutation: () => UseMutationResult<unknown>;\nexport declare const useGetConversationsQuery: (pageNumber: string, config?: UseQueryOptions<t.TGetConversationsResponse>) => QueryObserverResult<t.TGetConversationsResponse>;\nexport declare const useGetSearchEnabledQuery: (config?: UseQueryOptions<boolean>) => QueryObserverResult<boolean>;\nexport declare const useGetEndpointsQuery: <TData = t.TEndpointsConfig>(config?: UseQueryOptions<t.TEndpointsConfig, unknown, TData, import(\"@tanstack/react-query\").QueryKey> | undefined) => QueryObserverResult<TData>;\nexport declare const useGetModelsQuery: (config?: UseQueryOptions<t.TModelsConfig>) => QueryObserverResult<t.TModelsConfig>;\nexport declare const useCreatePresetMutation: () => UseMutationResult<s.TPreset, unknown, s.TPreset, unknown>;\nexport declare const useDeletePresetMutation: () => UseMutationResult<m.PresetDeleteResponse, unknown, s.TPreset | undefined, unknown>;\nexport declare const useSearchQuery: (searchQuery: string, pageNumber: string, config?: UseQueryOptions<t.TSearchResults>) => QueryObserverResult<t.TSearchResults>;\nexport declare const useUpdateTokenCountMutation: () => UseMutationResult<t.TUpdateTokenCountResponse, unknown, {\n    text: string;\n}, unknown>;\nexport declare const useLoginUserMutation: () => UseMutationResult<t.TLoginResponse, unknown, t.TLoginUser, unknown>;\nexport declare const useRegisterUserMutation: () => UseMutationResult<unknown, unknown, t.TRegisterUser, unknown>;\nexport declare const useRefreshTokenMutation: () => UseMutationResult<t.TRefreshTokenResponse, unknown, unknown, unknown>;\nexport declare const useUserKeyQuery: (name: string, config?: UseQueryOptions<t.TCheckUserKeyResponse>) => QueryObserverResult<t.TCheckUserKeyResponse>;\nexport declare const useRequestPasswordResetMutation: () => UseMutationResult<t.TRequestPasswordResetResponse, unknown, t.TRequestPasswordReset, unknown>;\nexport declare const useResetPasswordMutation: () => UseMutationResult<unknown, unknown, t.TResetPassword, unknown>;\nexport declare const useAvailablePluginsQuery: <TData = {\n    name: string;\n    pluginKey: string;\n    description: string;\n    icon: string;\n    authConfig: {\n        description: string;\n        authField: string;\n        label: string;\n    }[];\n    authenticated?: boolean | undefined;\n    isButton?: boolean | undefined;\n}[]>(config?: UseQueryOptions<{\n    name: string;\n    pluginKey: string;\n    description: string;\n    icon: string;\n    authConfig: {\n        description: string;\n        authField: string;\n        label: string;\n    }[];\n    authenticated?: boolean | undefined;\n    isButton?: boolean | undefined;\n}[], unknown, TData, import(\"@tanstack/react-query\").QueryKey> | undefined) => QueryObserverResult<TData>;\nexport declare const useUpdateUserPluginsMutation: () => UseMutationResult<t.TUser, unknown, t.TUpdateUserPlugins, unknown>;\nexport declare const useGetStartupConfig: () => QueryObserverResult<t.TStartupConfig>;\n"}}
