{"code":"export {};\n//# sourceMappingURL=queries.js.map","references":["/home/lau/dev-projects/Chocolatine/node_modules/@tanstack/react-query/build/lib/index.d.ts","/home/lau/dev-projects/Chocolatine/packages/data-provider/src/schemas.ts"],"map":"{\"version\":3,\"file\":\"queries.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/types/queries.ts\"],\"names\":[],\"mappings\":\"\"}","dts":{"name":"/home/lau/dev-projects/Chocolatine/packages/data-provider/dist/types/types/queries.d.ts","writeByteOrderMark":false,"text":"import type { InfiniteData } from '@tanstack/react-query';\nimport type { TMessage, TConversation } from '../schemas';\nexport type Conversation = {\n    id: string;\n    createdAt: number;\n    participants: string[];\n    lastMessage: string;\n    conversations: TConversation[];\n};\nexport type ConversationListParams = {\n    limit?: number;\n    before?: string | null;\n    after?: string | null;\n    order?: 'asc' | 'desc';\n    pageNumber: string;\n    conversationId?: string;\n    isArchived: boolean;\n};\nexport type ConversationListResponse = {\n    conversations: TConversation[];\n    pageNumber: string;\n    pageSize: string | number;\n    pages: string | number;\n    messages: TMessage[];\n};\nexport type ConversationData = InfiniteData<ConversationListResponse>;\nexport type ConversationUpdater = (data: ConversationData, conversation: TConversation) => ConversationData;\n"}}
